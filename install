#!/usr/bin/env bash

set -euo pipefail

# UTILS
LOG_FILE=${LOG_FILE:-$HOME/dotfiles.log}

red='\033[0;31m'
green='\033[0;32m'
purple='\033[0;35m'
blue="\033[0;34m"
normal='\033[0m'
yellow="\033[0;33m" 
cyan="\033[0;36m"

utils_log() {
  log_name="$1"
  current_date=$(date "+%Y-%m-%d %H:%M:%S")

  touch "$LOG_FILE"
  echo "----- $current_date - $log_name -----" >>"$LOG_FILE"

  while IFS= read -r log_message; do
    echo "$log_message" >>"$LOG_FILE"
  done

  echo "" >>"$LOG_FILE"
}

echo_normal() {
  local -r text="${1:-}"
  echo -e "$text"
}

echo_custom() { echo_normal " > $1"; }
echo_error() { echo_custom "${red}$1${normal}"; }
echo_info() { echo_custom "${blue}$1${normal}"; }
echo_warn() { echo_custom "${yellow}$1${normal}"; }
echo_success() { echo_custom "${green}$1${normal}"; }

echo_question() {
  echo_normal "$1? "
  read -rp "? " "$2";
}

command_exists() {
  type "$1" >/dev/null 2>&1
}

current_timestamp() {
  date +%s;
}

create_dotfiles_dir() {
  if [ -d "$1" ]; then
    local -r backup_path="$1.$(current_timestamp).back"

    echo_info "The path '$1' already exist"
    echo_success "Creating a backup in '$backup_path'"

    mv "$1" "$backup_path"
  else
    echo_normal "Ok! dotfiles will be located in: ${purple}$DOTFILES_PATH${normal}"
  fi

  mkdir -p "$1"
}

bash_run() {
  /bin/bash -c "$1" 2>&1 | utils_log "Running $1"
}
# END UTILS

install_homebrew() {
  if ! command_exists brew; then
    echo_warn "Homebrew not installed, trying to install"
    
    bash_run "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
    eval "$(/opt/homebrew/bin/brew shellenv)"
    
    echo_success "Homebrew installed\\n"
  fi
}

install_git() {
  if ! command_exists git; then
    echo_warn "git not installed, trying to install"
    bash_run "yes | brew install git"
    echo_success "Git installed\\n"

    case "$OSTYPE" in
    darwin*)
      echo_custom "Checking if Command Line Tools are installed 🕵️‍♂️"

      xcode-select --install 2>&1 | grep installed >/dev/null
      if [[ $? ]]; then
        echo_custom "Installing Command Line Tools 📺"
        xcode-select --install
        echo_question "Press a key after command line tools has finished to continue...👇" "CLT_INSTALLED"
      fi
      ;;
    *)
      echo_error "Could not install git, no package provider found"
      exit 1
      ;;
    esac
  fi
}

echo_custom "  ┌───────────────────────────────────────┐"
echo_custom "~ │ 🚀 Welcome to the ${green}dotfiles${normal} installer! │ ~"
echo_custom "  └───────────────────────────────────────┘\\n"

echo_question "Where do you want your dotfiles to be located? (${cyan}default ~/.dotfiles${normal})" "DOTFILES_PATH"

DOTFILES_FOLDER="dotfiles"
DOTFILES_REPOSITORY=${DOTFILES_REPOSITORY:-Caxvalencia/dotfiles}
DOTFILES_PATH="${DOTFILES_PATH:-$HOME/.dotfiles}"
DOTFILES_PATH="$(eval echo "$DOTFILES_PATH")"
export DOTFILES_PATH="$DOTFILES_PATH"
export REPOSITORY_PATH="$DOTFILES_PATH/$DOTFILES_FOLDER"

create_dotfiles_dir "$DOTFILES_PATH"
cd "$DOTFILES_PATH"

# INSTALL DEPENDENCIES
install_homebrew
install_git

# CLONE MAIN REPOSITORY
echo_custom "Cloning dotfiles"
bash_run "git clone \"https://github.com/$DOTFILES_REPOSITORY.git\""
echo_success "Repository cloned"

# MOVE INTO AND RUN MAIN SCRIPT
cd "$DOTFILES_FOLDER"
"$PWD/scripts/main"

echo_normal "\\n"
echo_success "🎉🎉🎉 All configurations installed correctly! 🎉🎉🎉"
echo_info "Please, restart your terminal to see the changes"
